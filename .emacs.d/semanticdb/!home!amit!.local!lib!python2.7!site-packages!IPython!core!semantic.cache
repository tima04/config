;; Object core/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "core/"
  :tables
  (list
    (semanticdb-table "compilerop.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"Compiler tools with improved interactive support.

Provides compilation machinery similar to codeop, but with caching support so
we can provide interactive tracebacks.

Authors
-------
* Robert Kern
* Fernando Perez
* Thomas Kluyver
\"\"\"" code nil nil [1 240])
            ("__future__" include nil nil [964 1001])
            ("__future__" include nil nil [1020 1037])
            ("ast" include nil nil [1038 1067])
            ("codeop" include nil nil [1068 1081])
            ("functools" include nil nil [1082 1098])
            ("hashlib" include nil nil [1099 1113])
            ("linecache" include nil nil [1114 1130])
            ("operator" include nil nil [1131 1146])
            ("time" include nil nil [1147 1158])
            ("PyCF_MASK" variable nil nil [1475 1662])
            ("code_name" function
               (:documentation " Compute a (probably) unique name for code for caching.
    
    This now expects code to be unicode.
    "
                :arguments 
                  ( ("code" variable nil (reparse-symbol function_parameters) [1855 1859])
                    ("number" variable nil (reparse-symbol function_parameters) [1861 1867]))                  )
                nil [1841 2350])
            ("CachingCompiler" type
               (:documentation "A compiler that caches code compiled from interactive statements.
    "
                :superclasses ("codeop.Compile")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("codeop" code nil (reparse-symbol indented_block_body) [2687 2716])
                            ("if" code nil (reparse-symbol indented_block_body) [3476 3563])
                            ("if" code nil (reparse-symbol indented_block_body) [3571 3678])
                            ("linecache" variable nil (reparse-symbol indented_block_body) [3887 3933]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2672 2676]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2659 3934])
                    ("ast_parse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3961 3965])
                            ("source" variable nil (reparse-symbol function_parameters) [3967 3973])
                            ("filename" variable nil (reparse-symbol function_parameters) [3975 3983])
                            ("symbol" variable nil (reparse-symbol function_parameters) [3997 4003]))                          
                        :documentation "Parse code to an AST with the current compiler flags active.
        
        Arguments are exactly the same as ast.parse (in the standard library),
        and are passed to the built-in compile function.")
                        (reparse-symbol indented_block_body) [3947 4313])
                    ("reset_compiler_flags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4347 4351]))                          
                        :documentation "Reset compiler flags to default state.")
                        (reparse-symbol indented_block_body) [4322 4582])
                    ("compiler_flags" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4620 4624]))                          
                        :documentation "Flags currently active in the compilation process.
        ")
                        (reparse-symbol indented_block_body) [4587 4727])
                    ("cache" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4750 4754])
                            ("code" variable nil (reparse-symbol function_parameters) [4756 4760])
                            ("number" variable nil (reparse-symbol function_parameters) [4762 4768]))                          
                        :documentation "Make a name for a block of code, and cache the code.
        
        Parameters
        ----------
        code : str
          The Python source code to cache.
        number : int
          A number which forms part of the code's name. Used for the execution
          counter.
          
        Returns
        -------
        The name of the cached code (as a string). Pass this as the filename
        argument to compilation, so that tracebacks are correctly hooked up.
        ")
                        (reparse-symbol indented_block_body) [4740 5525]))                  
                :type "class")
                nil [2534 5525])
            ("check_linecache_ipython" function
               (:documentation "Call linecache.checkcache() safely protecting our cached values.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [5554 5559]))                  )
                nil [5526 5905]))          
      :file "compilerop.py"
      :pointmax 5905
      :fsize 5904
      :lastmodtime '(21942 43144 215598 459000)
      :unmatched-syntax nil))
  :file "!home!amit!.local!lib!python2.7!site-packages!IPython!core!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
